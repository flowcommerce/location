/**
  * Generated by API Builder - https://www.apibuilder.io
  * Service version: 0.7.58
  * apibuilder 0.14.93 app.apibuilder.io/flow/healthcheck/latest/play_2_6_controllers
  */
package io.flow.healthcheck.v0.controllers

import io.flow.healthcheck.v0.models.json._
import io.flow.error.v0.models.json._

trait HealthchecksController extends play.api.mvc.BaseController {

  sealed trait GetHealthcheck extends Product with Serializable
  object GetHealthcheck {
    case class HTTP200(body: io.flow.healthcheck.v0.models.Healthcheck) extends GetHealthcheck
    case class HTTP422(body: io.flow.error.v0.models.GenericError) extends GetHealthcheck
    case class Undocumented(result: play.api.mvc.Result) extends GetHealthcheck
  }

  def getHealthcheck(request: play.api.mvc.Request[play.api.mvc.AnyContent]): scala.concurrent.Future[GetHealthcheck]
  final def getHealthcheck(): play.api.mvc.Handler = Action.async { request =>
    getHealthcheck(request)
      .map {
        case GetHealthcheck.HTTP200(body)        => Status(200)(play.api.libs.json.Json.toJson(body))
        case GetHealthcheck.HTTP422(body)        => Status(422)(play.api.libs.json.Json.toJson(body))
        case GetHealthcheck.Undocumented(result) => result
      }(defaultExecutionContext)
  }

}
